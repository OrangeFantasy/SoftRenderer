cmake_minimum_required(VERSION 3.26)
project(Renderer VERSION 0.1.0)

set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT ${PROJECT_NAME})

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_SOURCE_DIR}/Binary/Release)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR}/Binary/Debug)

set(SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Source)
file(GLOB_RECURSE HEADER_FILE ${SOURCE_DIR}/*.h ${SOURCE_DIR}/*.hpp)
file(GLOB_RECURSE SOURCE_FILE ${SOURCE_DIR}/*.c ${SOURCE_DIR}/*.cpp)
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${HEADER_FILE} ${SOURCE_FILE})

set(THIRD_PARTY_DIR ${CMAKE_CURRENT_SOURCE_DIR}/ThirdParty)
set(OPENCV_DIR ${THIRD_PARTY_DIR}/OpenCV)

include_directories(
    ${SOURCE_DIR}
    ${OPENCV_DIR}/build/include
)

# set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS /ENTRY:WinMainCRTStartup")

add_executable(${PROJECT_NAME} ${HEADER_FILE} ${SOURCE_FILE})

set(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} /O2 /Ob2")
set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS "/EHsc")
    
add_definitions(-DUNICODE -D_UNICODE)

target_link_libraries(${PROJECT_NAME}
    # ${OPENCV_DIR}/build/x64/vc16/lib/opencv_world470d.lib
    ${OPENCV_DIR}/build/x64/vc16/lib/opencv_world470.lib
)
